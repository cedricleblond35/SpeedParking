@model BO.Evenement

@{
    ViewBag.Title = "Details";
}

<script type="text/javascript">
    function initMap()
    {
        @{
            @*Construction d'un tableau contenant les parkigns et l'événement*@
        int i = 1;
        var tab = "[";

        foreach (var parking in Model.Parkings)
        {

            tab += "['"
                + parking.Nom.Trim() + "',"
                + parking.Latitude.ToString().Replace(',', '.') + ", "
                + parking.Longitude.ToString().Replace(',', '.') + ", "
                + i + "],";
            i++;
        }
        var evenement = "['" + Model.Nom + "'," + Model.Latitude.ToString().Replace(',', '.') + "," + Model.Longitude.ToString().Replace(',', '.') + ", 4]";

        tab += evenement + "]";
        }
        var locations = @Html.Raw(tab);

        @* Personnaliser les icone*@
        var iconURLPrefix = 'http://maps.google.com/mapfiles/ms/icons/';

        var icons = [
            iconURLPrefix + 'red-dot.png',
            iconURLPrefix + 'green-dot.png',
            iconURLPrefix + 'blue-dot.png',
            iconURLPrefix + 'grn-pushpin.png'
        ]
        var iconsLength = icons.length;

        @*Configure la map *@
        var myOptions = {
            zoom: 13,
            center: new google.maps.LatLng(@Model.Latitude.ToString().Replace(',', '.'), @Model.Longitude.ToString().Replace(',', '.')),
            mapTypeControl: true,
            mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU},
            navigationControl: true,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }

        var directionsDisplay = new google.maps.DirectionsRenderer;
        var directionsService = new google.maps.DirectionsService;
        var map = new google.maps.Map(document.getElementById('map'), myOptions);
        directionsDisplay.setMap(map);



        {@* Mettre les marqueur sur la carte*@}
        var infowindow = new google.maps.InfoWindow();
        var marker;
        var iconCounter = 0;
        for (i = 0; i < locations.length; i++) {
            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map,
                icon: icons[iconCounter]
            });

            google.maps.event.addListener(marker, 'click', (function(marker, i) {
                return function() {
                    infowindow.setContent(locations[i][0]);
                    infowindow.open(map, marker);
                    calculateAndDisplayRoute(directionsService, directionsDisplay,locations[i], locations[3]);
                    document.getElementById('mode').addEventListener('change', function() {
                        calculateAndDisplayRoute(directionsService, directionsDisplay, locations[i], locations[3]);
                    });
                }
            })(marker, i));

            iconCounter++;
        }
        console.log("larg:" + locations[0][1] + " long:" + locations[0][2]);

        //calculateAndDisplayRoute(directionsService, directionsDisplay, locations[0], locations[3]);

        function calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB) {
            var selectedMode = document.getElementById('mode').value;
            pointA = new google.maps.LatLng(pointA[1], pointA[2]);
            pointB = new google.maps.LatLng(pointB[1], pointB[2]);
            console.log(pointA + " long:" + pointB);
            directionsService.route({
                origin: pointA,
                destination: pointB,
                travelMode: google.maps.TravelMode[selectedMode]
            }, function(response, status) {
                if (status == 'OK') {
                    directionsDisplay.setDirections(response);
                } else {
                    window.alert('Directions request failed due to ' + status);
                }
            });
        }

    }
</script>
<script async defer src="http://maps.google.com/maps/api/js?key=AIzaSyBLMmc9Fx12W79c3eJ0t7WV8e8cZgJ2irs&callback=initMap"></script>
<div class="container">
    <h2>Détails</h2>
    <div class="row">
        <div class="col-md-4">
            <fieldset class="form-group">
                <legend>Evénement</legend>
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.NbParticipants)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.NbParticipants)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Nom)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Nom)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.DebutEvenement)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.DebutEvenement)
                    </dd>


                    <dt>
                        @Html.DisplayNameFor(model => model.Adresse)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Adresse)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Ville)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.Ville)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.CodePostal)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.CodePostal)
                    </dd>
                </dl>
            </fieldset>
            <div class="row">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th scope="col">Nom</th>
                            <th scope="col">Adresse</th>
                            <th scope="col">Nbre de place</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var tabParkingHTML = "";
                            foreach (var parking in Model.Parkings)
                            {
                                tabParkingHTML += "<tr><td>" + parking.Nom + "</ td>"
                                    + "<td>" + parking.Adresse + "<br>" + parking.CodePostal + "<br>" + parking.Ville + "</ td>"
                                    + "<td>" + parking.NbPlacesLibres + "</ td></ tr > ";
                            }
                            var myHtmlString = new HtmlString(tabParkingHTML);
                        }

                        @myHtmlString
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-md-8">
            <h3>Carte</h3>
            <div class="row">Sélectionnez le parking représenté par un icone parking pour avoir le trajet.</div>
            <div id="map" style="width:800px; height:500px;display:block;margin:0 auto;"></div>
            <div class="row">
                <h5>Légende</h5>
                <div class="table-responsive">
                    <table class="table" width="300">
                        <thead>
                            <tr>
                                <th scope="col">Evénement</th>
                                <th scope="col">Parking</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td><img src="http://maps.google.com/mapfiles/ms/icons/grn-pushpin.png" /></td>
                                <td><img src="http://maps.google.com/mapfiles/ms/icons/red-dot.png" /><img src="http://maps.google.com/mapfiles/ms/icons/green-dot.png" /><img src="http://maps.google.com/mapfiles/ms/icons/blue-dot.png" /></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <h5>Personnaliser</h5>
                <div class="row">
                    Mode de déplacement pour accéder à l'événement
                    <select id="mode">
                        <option value="WALKING">A pied</option>
                        <option value="BICYCLING">En vélo</option>
                        <option value="TRANSIT">En transport en commun</option>
                    </select>
                </div>
            </div>

        </div>

    </div>


</div>



<p>
    @Html.ActionLink("Editer", "Edit", new { id = Model.Id }, new { @class = "btn btn-default" }) |
    @Html.ActionLink("Retour à la liste des événements", "Index", new { @class = "btn btn-default" })
</p>
