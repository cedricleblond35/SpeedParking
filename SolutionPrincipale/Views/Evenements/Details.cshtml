@model BO.Evenement

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Evenement</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.NbParticipants)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NbParticipants)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Nom)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Nom)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DebutEvenement)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DebutEvenement)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FinEvenement)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FinEvenement)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Adresse)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Adresse)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Ville)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Ville)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CodePostal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CodePostal)
        </dd>

    </dl>
    
</div>






<script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyBLMmc9Fx12W79c3eJ0t7WV8e8cZgJ2irs&sensor=false"></script>
<script type="text/javascript">

    var locations = [
      ['Bondi Beach', -33.890542, 151.274856, 4],
      ['Coogee Beach', -33.923036, 151.259052, 5],
      ['Cronulla Beach', -34.028249, 151.157507, 3],
      ['Manly Beach', -33.80010128657071, 151.28747820854187, 2],
      ['Maroubra Beach', -33.950198, 151.259302, 1]
    ];


    /* 
    https://maps.googleapis.com/maps/api/directions/json?origin=-33.890542,151.274856&destination=-33.923036,151.259052&key=AIzaSyBLMmc9Fx12W79c3eJ0t7WV8e8cZgJ2irs
    "http://maps.google.com/maps/api/js?key=AIzaSyBLMmc9Fx12W79c3eJ0t7WV8e8cZgJ2irs&sensor=false
    */
  var geocoder;
  var map;
  var address =@Html.DisplayFor(model => model.Ville);

  function initialize() {
    geocoder = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng(-34.397, 150.644);
    var myOptions = {
      zoom: 8,
      center: latlng,
    mapTypeControl: true,
    mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU},
    navigationControl: true,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

    for (i = 0; i < locations.length; i++) {  
        marker = new google.maps.Marker({
            position: new google.maps.LatLng(locations[i][1], locations[i][2]),
            map: map
        });

        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infowindow.setContent(locations[i][0]);
                infowindow.open(map, marker);
            }
        })(marker, i));
    }



      /*
    if (geocoder) {
      geocoder.geocode( { 'address': address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
          map.setCenter(results[0].geometry.location);

            var infowindow = new google.maps.InfoWindow(
                { content: '<b>'+address+'</b>',
                  size: new google.maps.Size(150,50)
                });

            var marker = new google.maps.Marker({
                position: results[0].geometry.location,
                map: map,
                title:address
            });
            google.maps.event.addListener(marker, 'click', function() {
                infowindow.open(map,marker);
            });

          } else {
            alert("No results found");
          }
        } else {
          alert("Geocode was not successful for the following reason: " + status);
        }
      });
    }
  */

  }

</script>

<div id="map_canvas" style="width:1000px; height:1000px">


    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/directions/json?key=AIzaSyBLMmc9Fx12W79c3eJ0t7WV8e8cZgJ2irs&sensor=false"></script>

    <script type="text/javascript">
        var directionsDisplay;
        var directionsService = new google.maps.DirectionsService();
        var map;
        var haight = new google.maps.LatLng(37.7699298, -122.4469157);
        var oceanBeach = new google.maps.LatLng(37.7683909618184, -122.51089453697205);

        function initialize2() {
            function initMap() {
                var pointA = new google.maps.LatLng(51.7519, -1.2578),
                  pointB = new google.maps.LatLng(50.8429, -0.1313),
                  myOptions = {
                      zoom: 7,
                      center: pointA
                  },
                  map = new google.maps.Map(document.getElementById('map-canvas2'), myOptions),
                  // Instantiate a directions service.
                  directionsService = new google.maps.DirectionsService,
                  directionsDisplay = new google.maps.DirectionsRenderer({
                      map: map
                  }),
                  markerA = new google.maps.Marker({
                      position: pointA,
                      title: "point A",
                      label: "A",
                      map: map
                  }),
                  markerB = new google.maps.Marker({
                      position: pointB,
                      title: "point B",
                      label: "B",
                      map: map
                  });

                // get route from A to B
                calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB);

            }



            function calculateAndDisplayRoute(directionsService, directionsDisplay, pointA, pointB) {
                directionsService.route({
                    origin: pointA,
                    destination: pointB,
                    travelMode: google.maps.TravelMode.DRIVING
                }, function(response, status) {
                    if (status == google.maps.DirectionsStatus.OK) {
                        directionsDisplay.setDirections(response);
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
            }

            initMap();
        }

    </script>

<div id="map-canvas2" style="width:1000px; height:1000px">

<script  type="text/javascript">

    function start() {
       // initialize();
        initialize2();
    }
        
</script>

        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>
