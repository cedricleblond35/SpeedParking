@model SolutionPrincipale.Models.CreateEditEvenementVM
@using SolutionPrincipale.Extension;

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <h2>Edit</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Evenement</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Evenement.Id)
            
            @Html.CustomEditorFor(model => model.Evenement.Nom, "text")
            @Html.CustomEditorFor(model => model.Evenement.Description, "text")
            @Html.CustomEditorFor(model => model.Evenement.DebutEvenement, "datetime-local")
            @Html.CustomEditorFor(model => model.Evenement.DureeMinutes, "number")
            @Html.CustomEditorFor(model => model.Evenement.NbParticipants, "number")
            @Html.CustomEditorFor(model => model.Evenement.Adresse, "text")
            @Html.CustomEditorFor(model => model.Evenement.CodePostal, "text")
            @Html.CustomEditorFor(model => model.Evenement.Ville, "text")

            @Html.CustomButtonSubmit("Modifier l'événement")
        </div>
    }

    <div>
        @Html.ActionLink("Retour à la liste d'événements", "Index", null, new { @class = "btn btn-default" })
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
